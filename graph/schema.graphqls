# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @goField(
  forceResolver: Boolean
  name: String
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

# new directive
directive @auth on FIELD_DEFINITION

scalar Time
scalar UUID
scalar Decimal

type GeneratedDummy {
  name: String!
}

type PageInfo {
  startCursor: String!
  endCursor: String!
  hasNextPage: Boolean!
}

type LoginInfo {
  token: String!
  userId: Int!
  username: String!
  name: String!
  email: String
  phone: String
  imageUrl: String!
  modules: [AllowedModule!]!
}

type AllowedModule {
  moduleName: String!
  allowedActions: String!
}

type UsersConnection {
  edges: [UsersEdge!]!
  pageInfo: PageInfo!
}

type UsersEdge {
  cursor: String!
  node: User
}

type User {
  id: ID!
  username: String!
  name: String!
  email: String
  phone: String
  mobile: String
  imageUrl: String
  isActive: Boolean!
  roleId: Int
  role: Role
  createdAt: Time
  updatedAt: Time
}

input NewUser {
  username: String!
  name: String!
  email: String
  phone: String
  mobile: String
  imageUrl: String
  isActive: Boolean!
  password: String!
  roleId: Int
}

type Role {
  id: ID!
  name: String!
  createdAt: Time
  updatedAt: Time
}

type Module {
  id: ID!
  name: String!
  actions: String!
  createdAt: Time
  updatedAt: Time
}

input NewModule {
  name: String!
  actions: String!
}

type Query {
  getUser(id: ID!): User! @goField(forceResolver: true) @auth

  getUsers(
    name: String
    phone: String
    mobile: String
    email: String
    isActive: Boolean
  ): [User] @goField(forceResolver: true) @auth

  paginateUser(
    limit: Int = 10
    after: String
    name: String
    phone: String
    mobile: String
    email: String
    isActive: Boolean
  ): UsersConnection @goField(forceResolver: true) @auth

  #module

  getModule(id: ID!): Module! @goField(forceResolver: true) @auth
  getModules(name: String): [Module] @goField(forceResolver: true) @auth
}

type Mutation {
  register(input: NewUser!): User!
  login(username: String!, password: String!): LoginInfo!
    @goField(forceResolver: true)
  logout: Boolean! @goField(forceResolver: true) @auth

  #user module

  createUser(input: NewUser!): User! @goField(forceResolver: true) @auth
  updateUser(id: ID!, input: NewUser!): User!
    @goField(forceResolver: true)
    @auth
  deleteUser(userId: ID!): User! @goField(forceResolver: true) @auth
  changePassword(oldPassword: String!, newPassword: String!): User!
    @goField(forceResolver: true)
    @auth

  #module
  createModule(input: NewModule!): Module! @goField(forceResolver: true) @auth
  updateModule(id: ID!, input: NewModule!): Module!
    @goField(forceResolver: true)
    @auth
  deleteModule(id: ID!): Module! @goField(forceResolver: true) @auth
}
